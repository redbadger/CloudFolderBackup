// <auto-generated />
// ReSharper disable InconsistentNaming
#pragma warning disable 169

namespace RedBadger.CloudFolderBackup.Specs
{
    using Machine.Specifications;

    [Subject(typeof(IFolderConnection))]
    public class when_initialised_with_a_valid_path
    {
        private const string folderName = "Windows";

        protected static IFolderConnection folderConnection;

        private Establish context = () => folderConnection = new FolderConnection(string.Format(@"C:\{0}", folderName));

        private It should_be_valid = () => folderConnection.IsValid().ShouldBeTrue();

        private It should_return_the_foldername_as_the_zip_name =
            () => folderConnection.ZipName.ShouldEqual(string.Format("{0}.zip", folderName));
    }

    [Subject(typeof(IFolderConnection))]
    public class when_initialised_with_an_invalid_path
    {
        protected static IFolderConnection folderConnection;

        private Establish context = () => folderConnection = new FolderConnection(@"C:\ThisFolderShouldNeverExxxist");

        private It should_not_be_valid = () => folderConnection.IsValid().ShouldBeFalse();
    }
}